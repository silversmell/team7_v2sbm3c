<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.share_contents.Share_contentsDAOInter"> <!-- SB가 자동으로 구현하여 연동하는 interface -->

	<!-- 전체 목록 -->
	<select id="list_all"
		resultType="dev.mvc.share_contentsdto.Share_contentsVO">
		SELECT scon_no, scon_title, scon_contents, scon_views,scon_bookmark, scon_date,scon_priority
		FROM share_contents ORDER BY
		scon_no ASC
	</select>

	<!-- scon에 따른 목록 -->
	<select id="list_by_sconno"
		resultType="dev.mvc.share_contentsdto.Share_contentsVO">
		SELECT scon_no, scon_title, scon_contents, scon_views,
		scon_date, acc_no,scon_bookmark
		,cate_no
		FROM share_contents
		where
		scon_no=#{scon_no}
	</select>

	<!-- 사진 전체 목록 -->
	<select id="list_all_image"
		resultType="dev.mvc.share_contentsdto.Share_imageVO">
		SELECT
		file_no,scon_no,file_origin_name,file_upload_name,file_thumb_name,file_size,file_date
		FROM share_image
	</select>

	<!-- 해당 컨텐츠 목록 -->
	<select id="read"
		resultType="dev.mvc.share_contentsdto.Share_contentsVO"
		parameterType="Integer">
		SELECT scon_no, scon_title, scon_contents,scon_views,scon_bookmark,scon_date, acc_no,cate_no,scon_priority
		FROM
		share_contents
		where scon_no=#{scon_no}
	</select>

	<update id="update_view"
		parameterType="dev.mvc.share_contentsdto.Share_contentsVO">
		UPDATE share_contents
		SET scon_views=scon_views+1
		WHERE
		scon_no=#{scon_no}
	</update>

	<update id="update_text"
		parameterType="dev.mvc.share_contentsdto.Share_contentsVO">
		update share_contents
		set
		scon_title=#{scon_title},scon_contents=#{scon_contents}
		where
		scon_no=#{scon_no}
	</update>

	<insert id="create"
		parameterType="dev.mvc.share_contentsdto.Share_contentsVO">
		INSERT INTO share_contents(scon_no, scon_title,
		scon_contents,scon_bookmark,
		scon_views,scon_date, acc_no,cate_no)
		VALUES(share_contents_SEQ.nextval,#{scon_title},#{scon_contents},'N',0,sysdate,#{acc_no},1)
	</insert>

	<!-- 카테고리별 검색 + 페이징 목록 -->
	<select id="list_by_contents_search_paging"
		resultType="dev.mvc.share_contentsdto.Share_contentsVO"
		parameterType="HashMap">
		SELECT scon_no, scon_title, scon_contents, scon_views, acc_no,
		scon_date,scon_priority, r
		FROM (
		SELECT scon_no, scon_title,acc_no,
		scon_contents, scon_views,
		scon_date,scon_priority,rownum as r
		FROM (
		SELECT scon_no, scon_title,acc_no,
		scon_contents, scon_views, 
		scon_date,scon_priority
		FROM
		share_contents
		<choose>
			<when test="word != null or word != ''">
				WHERE (UPPER(scon_title) LIKE '%' || UPPER(#{word})
				|| '%'
				OR UPPER(scon_contents) LIKE '%' || UPPER(#{word}) || '%'
				OR
				UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
			</when>
			<otherwise>
				<!-- 조건이 없으면 모든 레코드 선택 -->
			</otherwise>
		</choose>
		ORDER BY scon_no DESC
		)
		)
		WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>

		<!-- 1 page: WHERE r >= 1 AND r <= 10; 2 page: WHERE r >= 11 AND r <= 20; 
			3 page: WHERE r >= 21 AND r <= 30; -->
	</select>

	<!-- 카테고리별 검색 레코드 갯수 -->
	<select id="list_by_cateno_search_count" resultType="int"
		parameterType="HashMap">
		SELECT COUNT(*) as cnt
		FROM share_contents
		<choose>
			<when test="word != null or word != ''">
				WHERE (UPPER(scon_title) LIKE '%' || UPPER(#{word})
				|| '%'
				OR UPPER(scon_contents) LIKE '%' || UPPER(#{word}) || '%'
				OR
				UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
			</when>
			<otherwise>
				<!-- 조건이 없으면 모든 레코드 선택 -->
			</otherwise>
		</choose>
	</select>


	<insert id="create_url" parameterType="HashMap">
		INSERT INTO
		contents_url(url_no,scon_no,url_link)
		VALUES(contents_url_SEQ.nextval,#{scon_no},#{url_link})
	</insert>

	<select id="url_read"
		resultType="dev.mvc.share_contentsdto.Contents_urlVO"
		parameterType="int">
		SELECT url_no,scon_no,url_link
		FROM contents_url
		where
		scon_no=#{scon_no}
	</select>
	<select id="only_url"
		resultType="dev.mvc.share_contentsdto.Contents_urlVO"
		parameterType="int">
		SELECT url_link
		FROM contents_url
		where scon_no=#{scon_no}
	</select>

	<update id="update_url" parameterType="HashMap">
		update contents_url
		set
		url_link=#{url_link}
		where scon_no=#{scon_no} AND url_no=#{url_no}
	</update>

	<delete id="delete_url" parameterType="int">
		delete from contents_url
		where scon_no=#{scon_no}
	</delete>



	<insert id="insert_tag" parameterType="HashMap">
		INSERT INTO
		contents_tag(contents_tag_no,scon_no,tag_no)
		VALUES
		(contents_tag_SEQ.nextval,#{scon_no},#{tag_no})
	</insert>

	<select id="read_contents_tag" parameterType="int"
		resultType="dev.mvc.share_contentsdto.Contents_tagVO">
		select tag_no
		from contents_tag
		where scon_no=#{scon_no}
	</select>

	<insert id="attach_create"
		parameterType="dev.mvc.share_contentsdto.Share_imageVO">
		INSERT INTO
		share_image(file_no,scon_no,file_origin_name,file_upload_name,file_thumb_name,file_size,file_date)
		VALUES(share_image_SEQ.nextval,#{scon_no},#{file_origin_name},#{file_upload_name},#{file_thumb_name},#{file_size},sysdate)
	</insert>

	<select id="select_hashtag"
		resultType="dev.mvc.recommend.HashtagVO">
		SELECT tag_no,tag_code,tag_name
		FROM hashtag
	</select>


	<select id="select_sconno"
		resultType="dev.mvc.share_contentsdto.Contents_tagVO">
		select scon_no
		from contents_tag
		where tag_no=#{tag_no}
	</select>

	<!-- 전체 이미지 조회 -->
	<select id="list_image"
		resultType="dev.mvc.share_contentsdto.Share_imageVO">
		SELECT
		file_no,scon_no,file_origin_name,file_upload_name,file_thumb_name,file_size,file_date
		FROM share_image
		ORDER BY scon_no DESC, file_no ASC
	</select>

	<select id="read_image"
		resultType="dev.mvc.share_contentsdto.Share_imageVO"
		parameterType="Integer">
		SELECT
		file_no,scon_no,file_origin_name,file_upload_name,file_thumb_name,file_size,file_date
		FROM share_image
		where scon_no=#{scon_no}
		ORDER BY scon_no DESC
	</select>

	<delete id="delete_image" parameterType="int">
		delete from share_image
		where scon_no=#{scon_no}
	</delete>

	<update id="update_file"
		parameterType="dev.mvc.share_contentsdto.Share_imageVO">
		update share_image
		set
		file_origin_name=#{file_origin_name},
		file_upload_name=#{file_upload_name},
		file_thumb_name=#{file_thumb_name},file_size=#{file_size}
		where
		file_no=#{file_no}
	</update>

	<select id="count_image" resultType="int" parameterType="int">
		select
		count(*)
		from share_image
		where scon_no=#{scon_no}
	</select>

	<update id="up_priority" parameterType="int">
		update share_contents
		set
		scon_priority=scon_priority+1
		where scon_no=#{scon_no}
	</update>

	<update id="down_priority" parameterType="int">
		update share_contents
		set scon_priority=scon_priority-1
		where scon_no=#{scon_no}
	</update>

	<update id="y_mark" parameterType="int">
		update share_contents
		set
		scon_bookmark='Y'
		where scon_no=#{scon_no}
	</update>

	<update id="n_mark" parameterType="int">
		update share_contents
		set
		scon_bookmark='N'
		where scon_no=#{scon_no}
	</update>

	<insert id="bookmark_create" parameterType="HashMap">
		INSERT INTO
		share_mark(smark_no, acc_no, scon_no)
		VALUES(share_mark_seq.nextval, #{acc_no}, #{scon_no})
	</insert>

	<delete id="bookmark_delete" parameterType="HashMap">
		DELETE FROM share_mark
		WHERE scon_no=#{scon_no} AND acc_no=#{acc_no}
	</delete>

	<delete id="bookmarall_delete" parameterType="int">
		DELETE FROM share_mark
		WHERE scon_no=#{scon_no}
	</delete>

	<select id="distinct_sconno"
		resultType="dev.mvc.share_contentsdto.Share_imageVO">
		select distinct scon_no
		from share_image
		ORDER BY scon_no
		DESC
	</select>

	<delete id="delete_tag" parameterType="int">
		delete from contents_tag
		where scon_no=#{scon_no}
	</delete>
	
		<delete id="delete" parameterType="int">
		delete from share_contents
		where scon_no=#{scon_no}
	</delete>

	<select id="tag_count" parameterType="int">
		select count(*)
		from
		contents_tag
		where tag_no=#{tag_no}
	</select>

	<!-- 카테고리별 검색 + 페이징 목록 -->
	<select id="contents_tag_search_paging"
		resultType="dev.mvc.share_contentsdto.Contents_tagVO"
		parameterType="HashMap">
		select scon_no,tag_no,contents_tag_no,r
		FROM(
		select scon_no,tag_no,contents_tag_no,rownum as r
		from (
		select scon_no,tag_no,contents_tag_no
		from contents_tag
		where tag_no=#{tag_no}
		ORDER BY scon_no DESC
		)
		)
		WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>

		<!-- 1 page: WHERE r >= 1 AND r <= 10; 2 page: WHERE r >= 11 AND r <= 20; 
			3 page: WHERE r >= 21 AND r <= 30; -->
	</select>
	<!-- scon_no에 따른 선택삭제 -->
	<delete id="delete_sconno" parameterType="list">
		DELETE FROM share_contents
		WHERE scon_no IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- scon_no에 따른 이미지 삭제 -->
	<delete id="sdelete_image" parameterType="list">
		DELETE FROM share_image
		WHERE scon_no IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- scon_no에 따른 url삭제 -->
	<delete id="sdelete_url" parameterType="list">
		DELETE FROM contents_url
		WHERE scon_no IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
		<delete id="sdelete_bookmark" parameterType="list">
		DELETE FROM share_mark
		WHERE scon_no IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>


	<!-- scon_no에 따른 태그 삭제 -->
	<delete id="sdelete_tag" parameterType="list">
		DELETE FROM contents_tag
		WHERE scon_no IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<select id="all_hashtag_name"
		resultType="dev.mvc.recommend.HashtagVO">
		SELECT hashtag.tag_name
		FROM contents_tag,hashtag
		WHERE hashtag.tag_no=contents_tag.tag_no
	</select>

<!--해시태그 조회--> 
	<select id="read_hashtag_name"
		resultType="dev.mvc.recommend.HashtagVO" parameterType="int">
		SELECT tag_name,r
		FROM(
		SELECT hashtag.tag_name,rownum as r
		FROM hashtag left outer join contents_tag
		on hashtag.tag_no=contents_tag.tag_no
		where hashtag.tag_no=#{tag_no}
		)
		WHERE R=1
	</select>

	<select id="sconno_hashtag"
		resultType="dev.mvc.recommend.HashtagVO" parameterType="int">
		SELECT tag_name,tag_no
		FROM hashtag
		WHERE hashtag.tag_no IN (
		SELECT contents_tag.tag_no
		FROM share_contents RIGHT OUTER JOIN contents_tag
		ON(share_contents.scon_no = contents_tag.scon_no)
		WHERE share_contents.scon_no=#{scon_no})
	</select>
	
 <!-- 사진이 여러개일 경우 한개만 보이게  -->
	<select id="distinct_image"
		resultType="dev.mvc.share_contentsdto.Share_imageVO"
		parameterType="int">
		SELECT file_no, scon_no, file_origin_name, file_upload_name,
		file_thumb_name, file_size, file_date
		FROM share_image
		WHERE scon_no = #{scon_no} AND ROWNUM &lt;= 1
	</select>
	
	<select id="mark_check" resultType="dev.mvc.bookmark.Share_markVO" parameterType="HashMap">
		select acc_no,scon_no
		from share_mark
		where scon_no=#{scon_no} AND acc_no=#{acc_no}
		ORDER BY acc_no asc
	</select>
	
	<!--  작성자  -->
	<select id="writer" resultType="String" parameterType="HashMap">
	SELECT account.acc_id
	FROM account , share_contents
	WHERE account.acc_no=share_contents.acc_no AND share_contents.scon_no=#{scon_no}
	</select>
	
	<!-- 게시글 태그 갯수-->
	<select id="bookmark_count" resultType="int" parameterType="int">
	SELECT count(*)
	FROM share_mark
  WHERE scon_no=#{scon_no}
	</select>
	
<!-- 태그에 따른 이미지 조회 -->
	<select id="related_image"
		resultType="dev.mvc.share_contentsdto.Share_imageVO"
		parameterType="int">
		SELECT scon_no, file_origin_name,file_upload_name,file_thumb_name, r
		FROM (
		SELECT sc.scon_no, image.file_origin_name,
		ct.tag_no,image.file_thumb_name,image.file_upload_name,
		ROW_NUMBER() OVER (PARTITION BY sc.scon_no ORDER BY sc.scon_no desc) as r
		FROM share_image image
		INNER JOIN share_contents sc ON image.scon_no = sc.scon_no
		INNER JOIN contents_tag ct ON ct.scon_no = sc.scon_no
		where ct.tag_no =#{tag_no}
		)
		where r=1
		ORDER BY r ASC

	</select>
	<!-- 태그에 따른 이미지 갯수 조회 -->
	<select id="related_image_count" resultType="int">
		SELECT COUNT(*)
		FROM(
		SELECT scon_no,file_origin_name,file_upload_name,file_thumb_name, r
		FROM (
		SELECT sc.scon_no, image.file_origin_name,
		ct.tag_no,image.file_thumb_name,image.file_upload_name,
		ROW_NUMBER() OVER (PARTITION BY sc.scon_no ORDER BY sc.scon_no desc) as r
		FROM share_image image
		INNER JOIN share_contents sc ON image.scon_no = sc.scon_no
		INNER JOIN contents_tag ct ON ct.scon_no = sc.scon_no
		where ct.tag_no =1
		)
		where r = 1
		ORDER BY r ASC
		)
	</select>
	
	<!-- 회원별 프로필 사진  -->
	<select id = "read_img" resultType="dev.mvc.account.AccountVO" parameterType="int">
		SELECT ac.acc_img,ac.acc_saved_img,ac.acc_thumb_img,acc_img_size,ac.acc_no,ac.acc_id,sc.scon_title
		FROM share_contents sc INNER JOIN account ac
		ON ac.acc_no = sc.acc_no
		WHERE sc.scon_no=#{scon_no}
		ORDER BY sc.scon_no desc
	</select>

</mapper>










