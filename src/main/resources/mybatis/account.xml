<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- SB가 자동으로 구현하여 연동하는 interface -->
<mapper namespace="dev.mvc.account.AccountDAOInter"> <!-- SB가 자동으로 구현하여 연동하는
	interface -->

	<!-- 해시태그 목록 가져오기 -->
	<select id="hashtagList" resultType="dev.mvc.recommend.HashtagVO">
		SELECT tag_no, tag_code, tag_name
		FROM hashtag
	</select>

	<!-- 해시태그 분류 코드 가져오기 -->
	<select id="tagCodeList" resultType="String">
		SELECT LISTAGG(tag_code, ',') WITHIN GROUP (ORDER BY tag_code DESC) AS
		tag_codes
		FROM (
			SELECT DISTINCT tag_code
			FROM hashtag
		)
	</select>

	<!-- 아이디(이메일) 중복 검사 -->
	<select id="checkID" resultType="int" parameterType="String">
		SELECT COUNT(acc_id) AS cnt
		FROM account
		WHERE acc_id=#{acc_id}
	</select>

	<!-- 이름(닉네임) 중복 검사 -->
	<select id="checkName" resultType="int" parameterType="String">
		SELECT COUNT(acc_name) AS cnt
		FROM account
		WHERE acc_name=#{acc_name}
	</select>

	<!-- 회원 가입 -->
	<insert id="create" parameterType="dev.mvc.account.AccountVO">
		<selectKey keyProperty="acc_no" resultType="int" order="AFTER">
			SELECT ACCOUNT_SEQ.currval AS acc_no FROM dual
		</selectKey>
		INSERT INTO ACCOUNT(acc_no, acc_id, acc_pw, acc_name, acc_date, acc_grade)
		VALUES(ACCOUNT_SEQ.nextval, #{acc_id}, #{acc_pw}, #{acc_name}, sysdate, 15)
	</insert>

	<!-- 추천 데이터(해시태그) 저장 -->
	<insert id="insertRecommend" parameterType="dev.mvc.recommend.RecommendVO">
		INSERT INTO RECOMMEND(recom_no, acc_no, tag_no)
		VALUES(RECOMMEND_SEQ.nextval, #{acc_no}, #{tag_no})
	</insert>
	
	<!-- 회원 목록 조회(관리자) -->
	<select id="list" resultType="dev.mvc.account.AccountVO">
		SELECT acc_no, acc_id, acc_pw, acc_name, acc_tel, acc_age, acc_date, acc_grade,
		acc_img, acc_saved_img, acc_thumb_img, acc_img_size
		FROM account
		ORDER BY acc_grade ASC, acc_id ASC
	</select>
	
	<!-- 회원 정보 조회(회원 목록, 마이페이지) -->
	<select id="read" resultType="dev.mvc.account.AccountVO" parameterType="int">
		SELECT acc_no, acc_id, acc_pw, acc_name, acc_tel, acc_age, acc_date, acc_grade,
		acc_img, acc_saved_img, acc_thumb_img, acc_img_size
		FROM account
		WHERE acc_no = #{acc_no}
	</select>
	
	<!-- 회원 정보 수정(회원 목록, 마이페이지) -->
	<update id="update" parameterType="dev.mvc.account.AccountVO">
		UPDATE account
		SET acc_name=#{acc_name}, acc_tel=#{acc_tel}, acc_age=#{acc_age}
		WHERE acc_no=#{acc_no}
	</update>
	
	
	
	
	
	
	
	
	
	


</mapper>